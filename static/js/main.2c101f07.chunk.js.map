{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","App.tsx","api.ts","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","query","setQuery","setMovies","setIsSubmitted","isSubmitted","setMovie","showError","setShowError","useEffect","onSubmit","e","preventDefault","handleSubmit","htmlFor","type","value","onChange","target","id","placeholder","classNames","disabled","length","onClick","some","App","useState","fetch","then","res","json","catch","Response","Error","getMovie","movieFromServer","undefined","Title","Plot","Poster","imdbID","finally","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2c101f07.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useEffect } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport { MovieCard } from '../MovieCard';\n\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  query: string;\n  setQuery: (query: string) => void;\n  movie: Movie | null;\n  setMovie: (movie: Movie | null) => void;\n  movies: Movie[];\n  setMovies: (movies: Movie[]) => void;\n  isSubmitted: boolean;\n  setIsSubmitted: (isFetching: boolean) => void;\n  showError: boolean;\n  setShowError: (showError: boolean) => void;\n}\n\nexport const FindMovie: React.FC<Props> = ({\n  query, setQuery, movie, setMovies, movies, setIsSubmitted, isSubmitted,\n  setMovie, showError, setShowError,\n\n}) => {\n  useEffect(() => {\n    setShowError(false);\n  }, [query]);\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    setIsSubmitted(true);\n  };\n\n  const handleAdd = () => {\n    if (movie) {\n      setMovies([...movies, movie]);\n\n      if (movies.length\n        && movies.some(({ imdbId }) => movie.imdbId === imdbId)) {\n        setMovies(movies);\n      }\n    }\n\n    setQuery('');\n    setMovie(null);\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={(e) => handleSubmit(e)}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              value={query}\n              onChange={(e) => setQuery(e.target.value)}\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n            />\n          </div>\n\n          {showError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames({\n                'button is-light': !isSubmitted,\n                'button is-light is-loading': isSubmitted,\n              })}\n              disabled={!query.length}\n            >\n              {!movie ? 'Find a movie' : 'Search again'}\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAdd}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nimport { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nimport { getMovie } from './api';\n\nexport const App = () => {\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [movies, setMovies] = useState<Movie[]>([]);\n  const [query, setQuery] = useState<string>('');\n  const [isSubmitted, setIsSubmitted] = useState<boolean>(false);\n  const [showError, setShowError] = useState<boolean>(false);\n\n  const isMovieData = (data: MovieData | ResponseError): data is MovieData => {\n    return (data as MovieData).Title !== undefined;\n  };\n\n  useEffect(() => {\n    if (isSubmitted && query.length) {\n      getMovie(query)\n        .then((movieFromServer) => {\n          if (isMovieData(movieFromServer)) {\n            setMovie({\n              title: movieFromServer.Title,\n              description: movieFromServer.Plot,\n              imgUrl:\n                movieFromServer.Poster !== 'N/A'\n                  ? movieFromServer.Poster\n                  : 'https://via.placeholder.com/360x270.png?text=no%20preview',\n              imdbUrl: `https://www.imdb.com/title/${movieFromServer.imdbID}`,\n              imdbId: movieFromServer.imdbID,\n            });\n            setShowError(false);\n          } else {\n            setShowError(true);\n          }\n        })\n        .catch(() => {\n          setShowError(true);\n        })\n        .finally(() => {\n          setIsSubmitted(false);\n        });\n    }\n  }, [isSubmitted]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        {movies.length > 0 && (\n          <MoviesList movies={movies} />\n        )}\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          query={query}\n          setQuery={setQuery}\n          movie={movie}\n          setMovie={setMovie}\n          movies={movies}\n          setMovies={setMovies}\n          isSubmitted={isSubmitted}\n          setIsSubmitted={setIsSubmitted}\n          showError={showError}\n          setShowError={setShowError}\n        />\n      </div>\n    </div>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=3080b0b7';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}